@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: "Sour Gummy", sans-serif;
}

@keyframes ping-border {
  0% {
    box-shadow: 0 0 0 2px rgb(255, 255, 255); /* Initial small white border */
  }
  75% {
    box-shadow: 0 0 0 5px rgb(255, 255, 255); /* Expand white border */
  }
  100% {
    box-shadow: 0 0 0 2px rgb(255, 255, 255); /* Return to original border size */
  }
}



/* Apply the border ping animation */
.animate-ping-border {
  animation: ping-border 2s cubic-bezier(0, 0, 0.2, 1) infinite;
}


.animated-border {
  --borderColor: #EB1E39; /* Define the border color directly within the class */
  position: relative;
  width: auto;
  margin: auto;
  border: none; /* Removed the white border */
  cursor: pointer;
}

.animated-border {
  position: relative; /* Ensure the pseudo-elements are positioned relative to this element */
  border: 1px solid transparent; /* Optional, to make sure the border is transparent when not hovered */
}

.animated-border::before,
.animated-border::after {
  content: "";
  position: absolute;
  width: 0; /* Start with no width */
  height: 0; /* Start with no height */
  transition: 0.3s ease-in-out; /* Animate the expansion of the border */
}

.animated-border::before {
  top: 0;
  left: 0;
  border-top: 1px solid var(--borderColor); /* Use your border color */
  border-left: 1px solid var(--borderColor); /* Use your border color */
}

.animated-border::after {
  right: 0;
  bottom: 0;
  border-bottom: 1px solid var(--borderColor); /* Use your border color */
  border-right: 1px solid var(--borderColor); /* Use your border color */
}

.animated-border:hover::before,
.animated-border:hover::after {
  width: 100%; /* Expand to the full width of the element */
  height: 100%; /* Expand to the full height of the element */
}


/* index.css */
@keyframes slow-bounce {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-20px);
  }
}

.slow-bounce {
  animation: slow-bounce 4s infinite;
}

/* index.css */
@keyframes slow-ping {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

.slow-ping {
  position: relative;
  display: inline-block;
}

.slow-ping::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  background-color: rgba(59, 130, 246, 0.5); /* Adjust color as needed */
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(1);
  animation: slow-ping 3s infinite;
  pointer-events: none;
}

@keyframes slow-ping {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.2);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.ping-animation {
  animation: slow-ping 4s infinite;
}

.box {
  background-color: #ED1D38;
  --mask: linear-gradient(#000 0 0) 50% / calc(100% - 22.2px)
      calc(100% - 22.2px) no-repeat,
    radial-gradient(farthest-side, #000 98%, #0000) 0 0/24px 24px round;
  -webkit-mask: var(--mask);
  mask: var(--mask);
}

.scrolling-container {
  width: 100%;                  /* Full width */
  overflow: hidden;             /* Hide any overflowing content */
}

.scrolling-text-wrapper {
  display: flex;
  will-change: transform;       /* Improve performance during animation */
}

.scrolling-text-wrapper.normal {
  animation: scroll-text 30s linear infinite;  /* Continuous scroll */
}

.scrolling-text-wrapper.reverse {
  animation: scroll-text-reverse 30s linear infinite;  /* Reverse scroll */
}

.scrolling-text-wrapper:hover {
  animation-play-state: paused; /* Pause animation on hover */
}

.scrolling-text {
  white-space: nowrap;          /* Keep the text on a single line */
  padding-right: 100%;          /* Ensure smooth scrolling without space between loops */
}

@keyframes scroll-text {
  0% {
    transform: translateX(100%);  /* Start off-screen to the right */
  }
  100% {
    transform: translateX(-100%); /* Move off-screen to the left */
  }
}

@keyframes scroll-text-reverse {
  0% {
    transform: translateX(-100%); /* Start off-screen to the left */
  }
  100% {
    transform: translateX(100%);  /* Move off-screen to the right */
  }
}


.image-slider {
  position: relative;
  width: 80%;  /* Adjust based on your design */
  margin: 0 auto;
  overflow: hidden;
}

.image-slider-content {
  display: flex;
  transition: transform 0.5s ease-in-out;
}

.slider-image-container {
  width: 33.33%; /* Show 3 images at a time */
}

.slider-image {
  width: 100%;
  max-width: 100%;
  object-fit: cover;
}

.arrow-left,
.arrow-right {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(0, 0, 0, 0.5);
  color: white;
  border: none;
  padding: 10px;
  border-radius: 50%;
  cursor: pointer;
  font-size: 24px;
  z-index: 10;
}

.arrow-left {
  left: 10px;
}

.arrow-right {
  right: 10px;
}

button:disabled {
  background: rgba(0, 0, 0, 0.3); /* Disabled button appearance */
  cursor: not-allowed;
}


/* Striped background */
.bg-stripes {
  background-image: linear-gradient(
    45deg,
    rgba(255, 255, 255, 0.3) 25%,
    transparent 25%,
    transparent 50%,
    rgba(255, 255, 255, 0.3) 50%,
    rgba(255, 255, 255, 0.3) 75%,
    transparent 75%,
    transparent
  );
  background-size: 20px 20px;
  animation: move-stripes 1s linear infinite;
}

@keyframes move-stripes {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 40px 0;
  }
}

/* Define the keyframe animation for forward and backward movement */
@keyframes moveIconForwardBackward {
  0% {
    transform: translateX(0); /* Start at the initial position */
  }
  50% {
    transform: translateX(10px); /* Move 20px to the right */
  }
  100% {
    transform: translateX(0); /* Return to the initial position */
  }
}
/* Apply the animation to the icon */
.animate-icon {
  display: inline-block; /* Ensure the icon is an inline-block for transformations */
  animation: moveIconForwardBackward 1s ease-in-out infinite; /* 1s duration, smooth easing, infinite loop */
}




@media (max-width: 767px) {
  .single-mobile-flying-div {
    position: fixed;
    opacity: 0;
    visibility: visible;
    display: block;
    animation: single_mobile_fly_to_cart 1s ease-out;
  }

  @keyframes single_mobile_fly_to_cart {
    0% {
      left: 20%;
      top: 30%;
      opacity: 1;
    }

    100% {
      left: calc(100% - 200px);
      top: 23%;
      opacity: 0.5;
      transform: scale(0.05);
    }
  }

  .popup-mobile-flying-div {
    position: fixed;
    opacity: 0;
    visibility: visible;
    display: block;
    animation: popup_mobile_fly_to_cart 1s ease-out;
  }

  @keyframes popup_mobile_fly_to_cart {
    0% {
      left: 20%;
      top: 40%;
      opacity: 1;
    }

    100% {
      left: calc(100% - 100px);
      top: 40%;
      opacity: 0.5;
      transform: scale(0.05);
    }
  }
}



@media (min-width: 768px) {

  .single-flying-div {
    /* or relative/fixed */
    position: fixed;
    opacity: 0;
    visibility: visible;
    display: block;
    animation: single_fly_to_cart 1s ease-out;
  }

  @keyframes single_fly_to_cart {
    0% {
      left: 10%;
      /* Adjust to start position */
      top: 20%;
      /* Adjust to start position */
      opacity: 1;
    }

    100% {
      left: calc(100% - 200px);
      /* Adjust to end position */
      bottom: 100px;
      /* Adjust to end position */
      opacity: .5;
      /* Optional fade-out */
      transform: scale(0.01);
    }
  }


  .popup-flying-div {
    /* or relative/fixed */
    position: absolute;
    opacity: 0;
    visibility: visible;
    display: block;
    animation: popup_fly_to_cart 2s ease-out;
  }

  @keyframes popup_fly_to_cart {
    0% {
      left: 35%;
      /* Adjust to start position */
      bottom: 250px;
      /* Adjust to start position */
      opacity: 1;
    }

    100% {
      left: calc(100% - 100px);
      /* Adjust to end position */
      bottom: 250px;
      /* Adjust to end position */
      opacity: .5;
      /* Optional fade-out */
      transform: scale(0.1);
    }
  }
}

.starburst {
  width: 60px; /* adjust to control the size */
  aspect-ratio: 1;
  clip-path: polygon(100% 50%,80.43% 59.89%,90.45% 79.39%,68.81% 75.89%,65.45% 97.55%,50% 82%,34.55% 97.55%,31.19% 75.89%,9.55% 79.39%,19.57% 59.89%,0% 50%,19.57% 40.11%,9.55% 20.61%,31.19% 24.11%,34.55% 2.45%,50% 18%,65.45% 2.45%,68.81% 24.11%,90.45% 20.61%,80.43% 40.11%);
}


.bottom-border {
  --mask: 
  linear-gradient(to top,#0000 13px,#000 0),
  radial-gradient(13px,#000 98%,#0000) bottom/24.05px 26px;
-webkit-mask: var(--mask);
        mask: var(--mask);
}

@media (max-width: 767px) { /* Target small screens */
  .responsive-box {
    background-color: #ED1D38;
    --mask: 
      linear-gradient(0deg,#0000 24px,#000 0) 0 12px,
      radial-gradient(12px,#000 98%,#0000) 50%/22.2px 24px repeat space;
    -webkit-mask: var(--mask);
            mask: var(--mask);
  }
}

@media (min-width: 768px) { /* Target medium screens and above */
  .responsive-box {
    background-color: #ED1D38;
    --mask: linear-gradient(#000 0 0) 50% / calc(100% - 22.2px)
        calc(100% - 22.2px) no-repeat,
      radial-gradient(farthest-side, #000 98%, #0000) 0 0/24px 24px round;
    -webkit-mask: var(--mask);
    mask: var(--mask);
  }
}


.swal-custom-popup {
  padding: 20px !important; /* Reduced padding */
  font-family: 'Arial', sans-serif;
}

.swal-confirm-btn {
  background-color: #d9534f;
  color: white;
  font-size: 14px;
  padding: 8px 20px;
  border-radius: 5px;
  border: none;
  transition: background-color 0.3s ease-in-out;
}

.swal-confirm-btn:hover {
  background-color: #c9302c;
}

.swal-cancel-btn {
  background-color: #d8d4e4f1;
  color: #333;
  font-size: 14px;
  padding: 8px 20px;
  border-radius: 5px;
  border: none;
  margin-left: 10px;
}

.swal-cancel-btn:hover {
  background-color: #e6e6e6;
}

@font-face {
  font-family: 'Pollinator';
  src: url('/public/assets/fonts/pollinator.otf') format('truetype');
  font-weight: normal;
  font-style: normal;
}